<?xml version="1.0"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Concept."></meta><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>

<link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
<meta name="DC:Creator" content="Concept" />


<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 

<title>

</title>

<!-- Made with executable version 6.3 Release 0 Build 5 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<link href='http://fonts.googleapis.com/css?family=Comfortaa:300,400,700' rel='stylesheet' type='text/css'>
<style type="text/css">


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 6.3 Release 0 Build 5 */


/* Hack to hide a nested Quicktime player from IE, which can't handle it. */
* html object.MediaPlayerNotForIE {
	display: none;
}

body{
	font-family: Verdana, Geneva, sans-serif;
	font-weight: 400;
	background-color: #F1F1F1;
	color: #6BAFBD;
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: normal;
	margin-top: 30px;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

table,div,span,td{
	font-size: 100%;
	color: #666;
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: #666;
}

button{
	font-family: Verdana, Geneva, sans-serif;
	font-size: 100%;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: #666;
}

.ExerciseSubtitle{
	font-size: 120%;
	color: #666;
}

div.StdDiv{
	background-color: #F1F1F1;
	text-align: center;
	font-size: 100%;
	color: #666;
	padding: 0.5em;
	border-style: solid;
	border-width: 0px 0px 0px 0px;
	border-color: #666;
	margin-bottom: 1px;
}

#Instructions{
	font-size: 120%;
}
/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: Verdana, Geneva, sans-serif; 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: Verdana, Geneva, sans-serif; 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: Verdana, Geneva, sans-serif;
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: #666;
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: #666;
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: #666;
}

.LeftItem{
	font-size: 100%;
	color: #666;
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 100%;
	color: #4da980;
}

span.CorrectMark{
}

input, textarea{
	font-family: Verdana, Geneva, sans-serif;
	font-size: 120%;
}

select{
	font-size: 100%;
}

div.Feedback {
	background-color: #F1F1F1;
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: #666;
	position: absolute;
	display: none;
	font-size: 100%;
}




div.ExerciseDiv{
	color: #666;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: #666;
	border-color: #666;
	margin-left: 5%;
	margin-right: 5%;
	margin-top: 2em;
	margin-bottom: 2em;
	width: 90%;
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: #F1F1F1;
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	color: #666;
	background-color: #F1F1F1;
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: #666;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: center;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: #666;
	width: 80%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
	color: #4da980;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #666;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #666;
	color: #666;
}

table.CrosswordGrid span{
	color: #666;
}

table.CrosswordGrid td.BlankCell{
	background-color: #666;
	color: #666;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #F1F1F1;
	color: #666;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #F1F1F1;
	color: #666;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #666;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #666;
}

.GridNum:hover, .GridNum:visited{
	color: #666;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: Verdana, Geneva, sans-serif;
	font-size: 120%;
	background-color: #F1F1F1;
	color: #666;
	width: 2em;
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: Verdana, Geneva, sans-serif;
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

.Answer{
	font-size: 120%;
	letter-spacing: 0.1em;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: #666;
}

.Highlight{
	color: #4DA980;
	background-color: #4DA980;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 0px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	text-align: center;
	border-style: solid;

	border-left-color: #6BAFBD;
	border-top-color: #6BAFBD;
	border-right-color: #6BAFBD;
	border-bottom-color: #6BAFBD;
	color: #666;
	background-color: #F1F1F1;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonUp {
	color: #F1F1F1;
	text-align: center;
	border-style: solid;

	border-left-color: #6BAFBD;
	border-top-color: #6BAFBD;
	border-right-color: #6BAFBD;
	border-bottom-color: #6BAFBD;

	background-color: #6bafbd;
	color: #F1F1F1;
	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonDown {
	color: #F1F1F1;
	text-align: center;
	border-style: solid;

	border-left-color: #45677F;
	border-top-color: #45677F;
	border-right-color: #45677F;
	border-bottom-color: #45677F;
	background-color: #45677F;
	color: #F1F1F1;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: #666;
	text-align: center;
	margin: 2px 0px 2px 0px;
	clear: both;
	font-size: 100%;
}

.NavButton {
	border-style: solid;
	
	border-left-color: #666;
	border-top-color: #666;
	border-right-color: #666;
	border-bottom-color: #666;
	background-color: #666;
	color: #f1f1f1;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonUp {
	border-style: solid;

	border-left-color: #a6d4bf;
	border-top-color: #a6d4bf;
	border-right-color: #265440;
	border-bottom-color: #265440;
	color: #666;
	background-color: #F1F1F1;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonDown {
	border-style: solid;

	border-left-color: #265440;
	border-top-color: #265440;
	border-right-color: #a6d4bf;
	border-bottom-color: #a6d4bf;
	color: #4da980;
	background-color: #F1F1F1;

	border-width: 2px;
	cursor: pointer;	
}

/*EndNavBarStyle*/

a{
	color: #666;
}

a:visited{
	color: #666;
}

a:hover{
	color: #4da980;	
}

div.CardStyle {
	position: absolute;
	font-family: Verdana, Geneva, sans-serif;
	font-size: 100%;
	padding: 5px;
	border-style: solid;
	border-width: 1px;
	color: #666;
	background-color: #F1F1F1;
	left: -50px;
	top: -50px;
	overflow: visible;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


</style>



<script src="apk12.js" type="text/javascript"></script></head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle"></h2>



</div>

<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions">Completa&#x0163;i spa&#x0163;iile goale cu r&#259;spunsul corect. La final ap&#259;sa&#x0163;i butonul &#x201E;Verific&#259;&#x201D; pentru a afla rezultatul. &#x00CE;n urma ap&#259;s&#259;rii butonului &#x201E;Verific&#259;&#x201D;, orice r&#259;spuns gre&#351it va r&#259;m&#x00E2;ne a&#351a cum este pentru a v&#259; da posibilitatea s&#259;-l corecta&#x0163;i, iar toate r&#259;spunsurile corecte vor deveni nemodificabile.<br />Cu ajutorul Triunghiului lui Pascal, calcula&#355;i num&#259;rul de combin&#259;ri de:</div>
</div>





<div id="MainDiv" class="StdDiv">

<!-- These top buttons hidden; reveal if required -->
<!--
<button id="CheckButton1" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Verific&#259;&nbsp;</button>



 -->
 
<div id="ClozeDiv">
<form id="Cloze" method="post" action="" onsubmit="return false;">
<div class="ClozeBody">
1. 50 luate c&acirc;te 35<br />R: <span class="GapSpan" id="GapSpan0"><input type="text" id="Gap0" onfocus="TrackFocus(0)" onblur="LeaveGap()" class="GapBox" size="9"></input></span> <br />2. 60 luate c&acirc;te 5<br />R: <span class="GapSpan" id="GapSpan1"><input type="text" id="Gap1" onfocus="TrackFocus(1)" onblur="LeaveGap()" class="GapBox" size="7"></input></span> <br />3. 46 luate c&acirc;te 17<br />R: <span class="GapSpan" id="GapSpan2"><input type="text" id="Gap2" onfocus="TrackFocus(2)" onblur="LeaveGap()" class="GapBox" size="10"></input></span>
</div>
</form>
</div>



<button id="CheckButton2" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Verific&#259;&nbsp;</button>



</div>



<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="HideFeedback(); return false;">&nbsp;OK&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
